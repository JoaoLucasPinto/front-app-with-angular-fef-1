{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/tabs\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/card\";\nfunction CustomerComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Lista \");\n  }\n}\nfunction CustomerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"face\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Novo \");\n  }\n}\nfunction CustomerComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cliente \", ctx_r2.customer.firstNameCustomer, \" cadastrado com sucesso!\");\n  }\n}\nfunction CustomerComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(error_r4);\n  }\n}\nexport class CustomerComponent {\n  constructor(service) {\n    this.service = service;\n    this.success = false;\n    this.customer = {\n      idCustomer: '',\n      firstNameCustomer: '',\n      lastNameCustomer: '',\n      birthdateCustomer: '',\n      dateCreatedCustomer: '',\n      monthlyIncomeCustomer: '',\n      cpfCustomer: '',\n      emailCustomer: '',\n      passwordCustomer: '',\n      statusCustomer: true\n    };\n  }\n  ngOnInit() {}\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    this.service.save(this.customer).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n      },\n      error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach(element => {});\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n        }\n      }\n    });\n  }\n  listCustomer() {}\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 48,\n  vars: 9,\n  consts: [[\"mat-tab-label\", \"\"], [1, \"full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu primeiro nome\", \"name\", \"firstNameCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu \\u00FAltimo nome\", \"name\", \"lastNameCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu CPF\", \"name\", \"cpfCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"matInput\", \"\", \"placeholder\", \"Digite sua data de nascimento\", \"name\", \"birthdateCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"Digite sua renda mensal (R$)\", \"name\", \"monthlyIncomeCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Digite seu email\", \"name\", \"emailCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Digite sua senha\", \"name\", \"passwordCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\")(1, \"span\")(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"account_circle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" Clientes \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-tab-group\")(6, \"mat-tab\");\n      i0.ɵɵtemplate(7, CustomerComponent_ng_template_7_Template, 3, 0, \"ng-template\", 0);\n      i0.ɵɵelement(8, \"mat-card\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-tab\");\n      i0.ɵɵtemplate(10, CustomerComponent_ng_template_10_Template, 3, 0, \"ng-template\", 0);\n      i0.ɵɵelementStart(11, \"mat-card\")(12, \"mat-card-title\");\n      i0.ɵɵtext(13, \"Cadastro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"form\")(15, \"mat-form-field\", 1)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Primeiro Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.customer.firstNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"mat-form-field\", 1)(20, \"mat-label\");\n      i0.ɵɵtext(21, \"\\u00DAltimo Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.customer.lastNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"mat-form-field\", 1)(24, \"mat-label\");\n      i0.ɵɵtext(25, \"CPF: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.customer.cpfCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"mat-form-field\", 1)(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Data de Nascimento: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.customer.birthdateCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"mat-form-field\", 1)(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Renda Mensal: R$ \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.customer.monthlyIncomeCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"mat-form-field\", 1)(36, \"mat-label\");\n      i0.ɵɵtext(37, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.customer.emailCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"mat-form-field\", 1)(40, \"mat-label\");\n      i0.ɵɵtext(41, \"Senha: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.customer.passwordCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_43_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵtext(44, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"br\");\n      i0.ɵɵtemplate(46, CustomerComponent_div_46_Template, 3, 1, \"div\", 10);\n      i0.ɵɵtemplate(47, CustomerComponent_div_47_Template, 3, 1, \"div\", 11);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.firstNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.lastNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.cpfCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.birthdateCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.monthlyIncomeCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.emailCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.passwordCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatButton, i4.MatToolbar, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NumberValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.MatTabLabel, i8.MatTab, i8.MatTabGroup, i9.MatIcon, i10.MatCard, i10.MatCardTitle],\n  styles: [\".full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","i0","CustomerComponent","constructor","service","idCustomer","firstNameCustomer","lastNameCustomer","birthdateCustomer","dateCreatedCustomer","monthlyIncomeCustomer","cpfCustomer","emailCustomer","passwordCustomer","statusCustomer","ngOnInit","saveCustomer","datePipe","customer","transform","save","subscribe","next","response","success","errors","error","ex","forEach","element","listCustomer","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tiago/AngularProjects/front-app-with-angular-fef/src/app/customer/customer.component.ts","/Users/tiago/AngularProjects/front-app-with-angular-fef/src/app/customer/customer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Customer } from '../model/customer';\nimport { CustomerService } from '../service/customer.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent {\n\n  success: boolean = false;\n  errors!: String[];\n\n  constructor(private service: CustomerService){   \n  }\n\n  ngOnInit(): void {    \n  }\n\n  customer: Customer = {\n    idCustomer: '',\n    firstNameCustomer: '',\n    lastNameCustomer: '',\n    birthdateCustomer: '',\n    dateCreatedCustomer: '',\n    monthlyIncomeCustomer: '',\n    cpfCustomer: '',\n    emailCustomer: '',\n    passwordCustomer: '',\n    statusCustomer: true\n  }\n\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(\n      this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    \n    this.service.save(this.customer).subscribe({next: response => {\n      this.success = true;\n      this.errors = [];    \n    }, error: ex => {\n      if (ex.error.errors) {\n        this.errors = ex.error.errors;\n        this.success = false;\n        ex.error.errors.forEach((element:any) => {         \n        });\n      } else {\n          this.success = false;\n          this.errors = ex.error.errors;        \n      }\n    }})\n  }\n\n  listCustomer() {\n    \n  }\n\n}\n","<mat-toolbar>\n    <span>\n        <mat-icon>account_circle</mat-icon>\n        Clientes\n    </span>\n</mat-toolbar>\n<mat-tab-group>\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <mat-icon>list</mat-icon>\n            Lista\n        </ng-template>\n        <mat-card>\n            \n        </mat-card>\n    </mat-tab>\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <mat-icon>face</mat-icon>\n            Novo\n        </ng-template>\n        <mat-card>\n            <mat-card-title>Cadastro</mat-card-title>\n            <form>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Primeiro Nome: </mat-label>\n                    <input type=\"text\" matInput placeholder=\"Digite seu primeiro nome\"\n                        [(ngModel)]=\"customer.firstNameCustomer\" name=\"firstNameCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Último Nome: </mat-label>\n                    <input type=\"text\" matInput placeholder=\"Digite seu último nome\"\n                        [(ngModel)]=\"customer.lastNameCustomer\" name=\"lastNameCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>CPF: </mat-label>\n                    <input type=\"text\" matInput placeholder=\"Digite seu CPF\" [(ngModel)]=\"customer.cpfCustomer\"\n                        name=\"cpfCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Data de Nascimento: </mat-label>\n                    <input type=\"date\" matInput placeholder=\"Digite sua data de nascimento\"\n                        [(ngModel)]=\"customer.birthdateCustomer\" name=\"birthdateCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Renda Mensal: R$ </mat-label>\n                    <input type=\"number\" matInput placeholder=\"Digite sua renda mensal (R$)\"\n                        [(ngModel)]=\"customer.monthlyIncomeCustomer\" name=\"monthlyIncomeCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Email: </mat-label>\n                    <input type=\"email\" matInput placeholder=\"Digite seu email\" [(ngModel)]=\"customer.emailCustomer\"\n                        name=\"emailCustomer\" required />\n                </mat-form-field>\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Senha: </mat-label>\n                    <input type=\"password\" matInput placeholder=\"Digite sua senha\"\n                        [(ngModel)]=\"customer.passwordCustomer\" name=\"passwordCustomer\" required />\n                </mat-form-field>\n                <button (click)=\"saveCustomer()\" mat-raised-button color=\"primary\">Salvar</button>\n                <br />\n                <div role=\"alert\" *ngIf=\"success == true\">\n                    <span>Cliente {{ customer.firstNameCustomer }} cadastrado com sucesso!</span>\n                </div>\n                <div role=\"alert\" *ngFor=\"let error of errors\">\n                    <span>{{ error }}</span>\n                </div>\n            </form>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}